	#RequireContext CTmMode

	#Include "MathLib" as MathLib
	#Include "TextLib" as TextLib
	#Include "TimeLib" as TimeLib

	#Include "Libs/Nadeo/TrackMania/TM2.Script.txt" as TM2
	#Include "Libs/Nadeo/Layers2.Script.txt" as Layers2

	#Include "Libs/Envimix/Skins.Script.txt" as Skins

	#Setting S_ReplayUrl ""
	#Setting S_Car ""

	main() {
			wait(Players.count>0);	
			ItemList_Begin();
			
			declare CanyonCar = ItemList_Add("CanyonCar");
			declare StadiumCar = ItemList_Add("StadiumCar");
			declare ValleyCar = ItemList_Add("ValleyCar");
			declare LagoonCar = ItemList_Add("LagoonCar");
			
			ItemList_AddWithSkin("DesertCar", "Skins/Models/DesertCar/DesertCarNew.zip");
			ItemList_AddWithSkin("SnowCar", "Skins/Models/SnowCar/SnowCarNew.zip");
			ItemList_AddWithSkin("RallyCar", "Skins/Models/RallyCar/RallyCarNew.zip");
			ItemList_AddWithSkin("BayCar", "Skins/Models/BayCar/BayCarNew.zip");
			ItemList_AddWithSkin("IslandCar", "Skins/Models/IslandCar/IslandCarNew.zip");
			ItemList_AddWithSkin("CoastCar", "Skins/Models/CoastCar/CoastCarNew.zip");
			
			declare DesertCar = ItemList_AddWithSkin("DesertCarNew.Item.Gbx",Skins::GetDesertCar());
			declare SnowCar = ItemList_AddWithSkin("SnowCarNew.Item.Gbx",Skins::GetSnowCar());
			declare RallyCar = ItemList_AddWithSkin("RallyCarNew.Item.Gbx",Skins::GetRallyCar());
			declare BayCar = ItemList_AddWithSkin("BayCarNew.Item.Gbx",Skins::GetBayCar());
			declare IslandCar = ItemList_AddWithSkin("IslandCarNew.Item.Gbx",Skins::GetIslandCar());
			declare CoastCar = ItemList_AddWithSkin("CoastCarNew.Item.Gbx",Skins::GetCoastCar());
			
			declare CanyonCarOnStadium = ItemList_Add("CanyonVehicle.Item.Gbx");
			declare StadiumCarOnStadium = ItemList_Add("StadiumVehicle.Item.Gbx");
			declare ValleyCarOnStadium = ItemList_Add("ValleyVehicle.Item.Gbx");
			declare LagoonCarOnStadium = ItemList_Add("LagoonVehicle.Item.Gbx");
			
			declare DesertCarOnStadium = ItemList_AddWithSkin("DesertCarOnStadium.Item.Gbx",Skins::GetDesertCar());
			declare SnowCarOnStadium = ItemList_AddWithSkin("SnowCarOnStadium.Item.Gbx",Skins::GetSnowCar());
			declare RallyCarOnStadium = ItemList_AddWithSkin("RallyCarOnStadium.Item.Gbx",Skins::GetRallyCar());
			declare BayCarOnStadium = ItemList_AddWithSkin("BayCarOnStadium.Item.Gbx",Skins::GetBayCar());
			declare IslandCarOnStadium = ItemList_AddWithSkin("IslandCarOnStadium.Item.Gbx",Skins::GetIslandCar());
			declare CoastCarOnStadium = ItemList_AddWithSkin("CoastCarOnStadium.Item.Gbx",Skins::GetCoastCar());
			
			ItemList_End();
			
			declare Boolean Terminate;
			
			UIManager.UIAll.OverlayHideSpectatorControllers = True;
			UIManager.UIAll.OverlayHidePosition = True;
			UIManager.UIAll.OverlayHideBackground = True;
			UIManager.UIAll.ScoreTableVisibility = CUIConfig::EVisibility::ForcedHidden;
			UIManager.UIAll.SmallScoreTableVisibility = CUIConfig::EVisibility::ForcedHidden;
			UIManager.UIAll.UISequence = CUIConfig::EUISequence::PlayersPresentation;
			
			RequestLoadMap();
			wait(MapLoaded);
			
			wait(Players.count > 0);
			
			Map.MapName = TextLib::StripFormatting(Map.MapInfo.CollectionName^Map.MapInfo.Name^"."^S_Car);
			
			RaceGhost_RemoveAll();
			
			Layers2::Create("LoadingIngame","file://Media/Manialinks/LoadingIngame.xml");
			Layers2::Attach("LoadingIngame",Null);
			
			declare GhostTask = DataFileMgr.Ghost_Download("Replays/Downloaded/Nadeo_Envimix@bigbang1112/TempGhost.Replay.Gbx", S_ReplayUrl);
			wait(!GhostTask.IsProcessing);
			Layers2::Detach("LoadingIngame",Null);
			if(GhostTask.HasSucceeded) {
				declare Ghost = GhostTask.Ghost;
				
				declare netwrite Text Net_ReplayName for UIManager.GetUI(Players[0]);
				Net_ReplayName = Map.MapName^"_"^TextLib::StripFormatting(Ghost.Nickname)^"_"^TM2::TimeToText(Ghost.Result.Time);
				
				Layers2::Create("ReplaySave","file://Media/Manialinks/ReplaySave.xml");
				Layers2::Attach("ReplaySave",Null);

				declare GhostRace = RaceGhost_AddWithOffset(Ghost, -2000);
				
				UIManager.UIAll.SpectatorForcedTarget = GhostRace;
				UIManager.UIAll.SpectatorForceCameraType = 1;
				UIManager.UIAll.UISequence = CUIConfig::EUISequence::EndRound;
				
				declare netwrite Boolean Net_Saved for UIManager.GetUI(Players[0]);
				Net_Saved = False;

				while(!Terminate) {
					foreach(Event, UIManager.PendingEvents) {
						if(Event.CustomEventType == "SAVE_REPLAY") {
							declare SaveTask = DataFileMgr.Replay_Save("Downloaded/Nadeo_Envimix/"^Net_ReplayName^".Replay.Gbx", Map, Ghost);
							wait(!SaveTask.IsProcessing);
							if(SaveTask.HasSucceeded) {
								Net_Saved = True;
							}
						}
						if(Event.CustomEventType == "EXIT") {
							Terminate = True;
						}
					}
					yield;
				}
			}
	}
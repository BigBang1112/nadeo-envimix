<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<manialink version="3">
<quad z-index="0" size="150 100" bgcolor="FFFA" style="Bgs1" substyle="BgDialogBlur" halign="center" valign="center" pos="0 0"/>
<frame z-index="1">
	<label z-index="0" size="100 15" text="0:00.000" halign="center" valign="center2" pos="0 35" textfont="RajdhaniMono" textsize="15" id="Record"/>
	<label pos="0 27.5" z-index="0" size="100 5" text="" halign="center" textfont="RajdhaniMono" id="Type"/>
	
	<label pos="48 5.75" z-index="0" size="40 10" text="" halign="right" textfont="RajdhaniMono" textsize="6" valign="bottom" id="LabelEnvironment"/>
	<label pos="70 16" z-index="0" size="20 10" text="" halign="right" textfont="RajdhaniMono" textsize="10" id="LabelMap"/>
	<label pos="68 5" z-index="0" size="30 5" text="" textfont="RajdhaniMono" halign="right" id="LabelCar"/>
	<label pos="70 5.75" z-index="0" size="60 10" text="" halign="right" textfont="RajdhaniMono" textsize="4" valign="bottom" id="LabelMapName"/>
	
	<label pos="-45 18" z-index="0" size="50 12" text="" textfont="RajdhaniMono" id="LabelValidator" textsize="2" halign="center" autonewline="1" valign="center2" scriptevents="1" style="TextCardRaceRank"/>
	
	<label pos="0 14" z-index="0" size="29 10" text="0" textsize="10" textfont="OswaldMono" halign="center" id="LabelPointsValue"/>
	<label pos="0 3" z-index="0" size="28 5" text="SKILLPOINTS" textsize="1" halign="center" id="LabelPoints"/>
	
	<quad pos="-15 -2" z-index="0" size="86 28" bgcolor="FFFA" style="Bgs1" substyle="BgList"/>
	<frame id="FrameRating" hidden="1" pos="-2" z-index="1">
		<frame pos="30 -9">
			<quad z-index="-1" size="81 9" bgcolor="FFFA" halign="center" valign="center" style="BgsPlayerCard" substyle="BgRacePlayerName" id="QuadDifficultyGlow" hidden="1"/>
			<quad z-index="0" size="80 8" style="Bgs1" substyle="BgHealthBar" valign="center" halign="center" id="QuadDifficultyBack" scriptevents="1"/>
			<quad z-index="1" size="5 6" bgcolor="FFFA" halign="center" valign="center" style="Bgs1InRace" substyle="BgCard" scriptevents="1" id="QuadDifficultySlider" hidden="1"/>
			<label z-index="2" size="80 8" text="Advanced" halign="center" valign="center2" id="LabelDifficulty" style="TextTitle3" textsize="1" opacity=".5" hidden="1"/>
		</frame>
		<frame pos="30 -19">
			<quad z-index="-1" size="81 9" bgcolor="FFFA" halign="center" valign="center" style="BgsPlayerCard" substyle="BgRacePlayerName" id="QuadQualityGlow" hidden="1"/>
			<quad z-index="0" size="80 8" style="Bgs1" substyle="BgHealthBar" valign="center" halign="center" id="QuadQualityBack" scriptevents="1"/>
			<quad z-index="1" size="5 6" bgcolor="FFFA" halign="center" valign="center" style="Bgs1InRace" substyle="BgCard" scriptevents="1" id="QuadQualitySlider" hidden="1"/>
			<label z-index="2" size="80 8" text="Alright" halign="center" valign="center2" id="LabelQuality" style="TextTitle3" textsize="1" opacity=".5" hidden="1"/>
		</frame>
	</frame>
	<label pos="28 -25" z-index="1" size="85 3" text="Don't forget to rate the track, it's helpful for everyone!" textsize="1" autonewline="1" halign="center"/>
	
	<quad pos="-70 10" z-index="1" size="50 40" bgcolor="FFFA" style="Bgs1" substyle="BgList"/>
	
	<frame id="Leaderboard" z-index="2" pos="-67 7">
		<frame pos="1.75 -2" hidden="1">
			<label size="20 3" text="USERNAME" textsize="1" id="Nickname" scriptevents="1" style="TextCardRaceRank"/>
			<label pos="40 0" z-index="0" size="20 3" text="0:00:00" textsize="1" halign="right" style="TextCardMedium" id="Time" textfont="RajdhaniMono"/>
		</frame>
		<frame pos="1.75 -5" hidden="1">
			<label size="20 3" text="USERNAME" textsize="1" id="Nickname" scriptevents="1" style="TextCardRaceRank"/>
			<label pos="40 0" z-index="0" size="20 3" text="0:00:00" textsize="1" halign="right" style="TextCardMedium" id="Time" textfont="RajdhaniMono"/>
		</frame>
		<frame pos="1.75 -8" hidden="1">
			<label size="20 3" text="USERNAME" textsize="1" id="Nickname" scriptevents="1" style="TextCardRaceRank"/>
			<label pos="40 0" z-index="0" size="20 3" text="0:00:00" textsize="1" halign="right" style="TextCardMedium" id="Time" textfont="RajdhaniMono"/>
		</frame>
		<frame pos="1.75 -11" hidden="1">
			<label size="20 3" text="USERNAME" textsize="1" id="Nickname" scriptevents="1" style="TextCardRaceRank"/>
			<label pos="40 0" z-index="0" size="20 3" text="0:00:00" textsize="1" halign="right" style="TextCardMedium" id="Time" textfont="RajdhaniMono"/>
		</frame>
		<frame pos="1.75 -14" hidden="1">
			<label size="20 3" text="USERNAME" textsize="1" id="Nickname" scriptevents="1" style="TextCardRaceRank"/>
			<label pos="40 0" z-index="0" size="20 3" text="0:00:00" textsize="1" halign="right" style="TextCardMedium" id="Time" textfont="RajdhaniMono"/>
		</frame>
		<frame pos="1.75 -17" hidden="1">
			<label size="20 3" text="USERNAME" textsize="1" id="Nickname" scriptevents="1" style="TextCardRaceRank"/>
			<label pos="40 0" z-index="0" size="20 3" text="0:00:00" textsize="1" halign="right" style="TextCardMedium" id="Time" textfont="RajdhaniMono"/>
		</frame>
		<frame pos="1.75 -20" hidden="1">
			<label size="20 3" text="USERNAME" textsize="1" id="Nickname" scriptevents="1" style="TextCardRaceRank"/>
			<label pos="40 0" z-index="0" size="20 3" text="0:00:00" textsize="1" halign="right" style="TextCardMedium" id="Time" textfont="RajdhaniMono"/>
		</frame>
		<frame pos="1.75 -23" hidden="1">
			<label size="20 3" text="USERNAME" textsize="1" id="Nickname" scriptevents="1" style="TextCardRaceRank"/>
			<label pos="40 0" z-index="0" size="20 3" text="0:00:00" textsize="1" halign="right" style="TextCardMedium" id="Time" textfont="RajdhaniMono"/>
		</frame>
		<frame pos="1.75 -26" hidden="1">
			<label size="20 3" text="USERNAME" textsize="1" id="Nickname" scriptevents="1" style="TextCardRaceRank"/>
			<label pos="40 0" z-index="0" size="20 3" text="0:00:00" textsize="1" halign="right" style="TextCardMedium" id="Time" textfont="RajdhaniMono"/>
		</frame>
		<frame pos="1.75 -29" hidden="1">
			<label size="20 3" text="USERNAME" textsize="1" id="Nickname" scriptevents="1" style="TextCardRaceRank"/>
			<label pos="40 0" z-index="0" size="20 3" text="0:00:00" textsize="1" halign="right" style="TextCardMedium" id="Time" textfont="RajdhaniMono"/>
		</frame>
	</frame>
	
	<frame id="buttons">
		<frame pos="0 -40" id="buttonContinue">
			<quad z-index="0" size="140 10" bgcolor="FFF" halign="center" valign="center" scriptevents="1" id="button" opacity=".75"/>
			<label pos="0 0" z-index="1" size="50 5" text="Continue" halign="center" valign="center2" style="TextTitle3" id="text" textcolor="000" translate="1"/>
		</frame>
	</frame>
</frame>
<script>
<!--
	#Include "TextLib" as TextLib
	#Include "MathLib" as MathLib
	#Include "AnimLib" as AnimLib
	
	declare Integer ActivityPoints;
	
	declare Boolean ValidationIssues;
	
	Boolean Activity(Text _Url) {
		declare CXmlDocument Doc;
		declare netread Text Net_NEM_Car for UI;
		declare persistent Text PERSISTENT_NEM_ACCESS_TOKEN for LocalUser;
		declare ActivityRequest = Http.CreateGet(_Url^"&token="^PERSISTENT_NEM_ACCESS_TOKEN);
		wait(ActivityRequest.IsCompleted);
		if(ActivityRequest.StatusCode == 200) {
			Doc = Xml.Create(ActivityRequest.Result);
			Http.Destroy(ActivityRequest);
		}
		else if(ActivityRequest.StatusCode == 403) {
			Http.Destroy(ActivityRequest);
			OpenLink("https://prod.live.maniaplanet.com/login/oauth2/authorize?response_type=code&scope=basic&state=kkkkk&client_id=d7de0ddcdc&redirect_uri=http:%2F%2Ftrackmania.bigbang1112.eu/nadeoenvimix/api/token.php", CMlScript::LinkType::ManialinkBrowser);
			declare Tries = 0;
			while(True) {
				if(Tries > 5) {
					OpenLink("https://prod.live.maniaplanet.com/login/oauth2/authorize?response_type=code&scope=basic&state=kkkkk&client_id=d7de0ddcdc&redirect_uri=http:%2F%2Ftrackmania.bigbang1112.eu/nadeoenvimix/api/token.php", CMlScript::LinkType::ManialinkBrowser);
					Tries = 0;
				}
				declare persistent Text PERSISTENT_NEM_ACCESS_TOKEN for LocalUser;
				declare SecondActivityRequest = Http.CreateGet(_Url^"&token="^PERSISTENT_NEM_ACCESS_TOKEN);
				wait(SecondActivityRequest.IsCompleted);
				if(SecondActivityRequest.StatusCode == 200) {
					Doc = Xml.Create(SecondActivityRequest.Result);
					break;
				}
				else if(SecondActivityRequest.StatusCode != 403) {
					break;
				}
				log("Endscreen stuck - Activity, Code " ^ SecondActivityRequest.StatusCode ^ " " ^ _Url);
				Http.Destroy(SecondActivityRequest);
				Tries+=1;
			}
		}
		
		if(Doc != Null) {
			ActivityPoints += TextLib::ToInteger(Doc.Root.GetFirstChild("Points").TextContents);
			Xml.Destroy(Doc);
			return True;
		}		
		
		return False;
	}
	
	Void Validate() {
		declare netread Text Net_Environment for UI;
		declare netread Text Net_Map for UI;
		declare netread Text Net_NEM_Car for UI;
		declare netread Integer Net_Record for UI;
	
		declare persistent Text PERSISTENT_NEM_ACCESS_TOKEN for LocalUser;
		declare Text ActivityUrl = "http://trackmania.bigbang1112.eu/nadeoenvimix/api/activity.php?token="^PERSISTENT_NEM_ACCESS_TOKEN^"&map="^Map.MapInfo.MapUid^"&car="^Net_NEM_Car^"&type=validation&points=1000";
		declare ValidationRequest = Http.CreateGet("http://trackmania.bigbang1112.eu/nadeoenvimix/api/validate.php?token="^PERSISTENT_NEM_ACCESS_TOKEN^"&map="^Map.MapInfo.MapUid^"&car="^Net_NEM_Car^"&time="^Net_Record);
		wait(ValidationRequest.IsCompleted);
		if(ValidationRequest.StatusCode == 200) {
			(Page.GetFirstChild("LabelValidator") as CMlLabel).SetText("Congratz! You're the validator of \n"^Net_Environment^Net_Map^"."^Net_NEM_Car^".");
			Page.GetFirstChild("LabelValidator").Show();
			Activity(ActivityUrl);
			//provide replay url
		}
		else if(ValidationRequest.StatusCode == 403) {
			Http.Destroy(ValidationRequest);
			Page.GetFirstChild("LabelValidator").Show();
			OpenLink("https://prod.live.maniaplanet.com/login/oauth2/authorize?response_type=code&scope=basic&state=kkkkk&client_id=d7de0ddcdc&redirect_uri=http:%2F%2Ftrackmania.bigbang1112.eu/nadeoenvimix/api/token.php", CMlScript::LinkType::ManialinkBrowser);
			
			declare Tries = 0;
			while(True) {
				if(Tries > 5) {
					OpenLink("https://prod.live.maniaplanet.com/login/oauth2/authorize?response_type=code&scope=basic&state=kkkkk&client_id=d7de0ddcdc&redirect_uri=http:%2F%2Ftrackmania.bigbang1112.eu/nadeoenvimix/api/token.php", CMlScript::LinkType::ManialinkBrowser);
					Tries = 0;
				}
				declare persistent Text PERSISTENT_NEM_ACCESS_TOKEN for LocalUser;
				declare SecondValidationRequest = Http.CreateGet("http://trackmania.bigbang1112.eu/nadeoenvimix/api/validate.php?token="^PERSISTENT_NEM_ACCESS_TOKEN^"&map="^Map.MapInfo.MapUid^"&car="^Net_NEM_Car^"&time="^Net_Record);
				wait(SecondValidationRequest.IsCompleted);
				if(SecondValidationRequest.StatusCode == 200) {
					(Page.GetFirstChild("LabelValidator") as CMlLabel).SetText("Congratz! You're the validator.");
					Page.GetFirstChild("LabelValidator").Show();
					Activity(ActivityUrl^"&token="^PERSISTENT_NEM_ACCESS_TOKEN);
					//provide replay url
					break;
				}
				else if(SecondValidationRequest.StatusCode != 403) {
					(Page.GetFirstChild("LabelValidator") as CMlLabel).SetText("Something is wrong on the serverside, try it again.");
					Page.GetFirstChild("LabelValidator").Show();
					ValidationIssues = True;
					break;
				}
				log("Endscreen stuck - Validation, Code " ^ SecondValidationRequest.StatusCode);
				Http.Destroy(SecondValidationRequest);
				Tries+=1;
			}
		}
		else {
			(Page.GetFirstChild("LabelValidator") as CMlLabel).SetText("Something is wrong on the serverside, try it again.");
			ValidationIssues = True;
			Page.GetFirstChild("LabelValidator").Show();
		}
		
		if(ValidationRequest.StatusCode != 403)
			Http.Destroy(ValidationRequest);
	}
	
	Boolean IsCampaignMap(Text _MapUid) {
		foreach(Campaign,DataFileMgr.Campaigns) {
			foreach(MapGroup,Campaign.MapGroups) {
				foreach(MapInfo,MapGroup.MapInfos) {
					if(MapInfo.MapUid == _MapUid) {
						return True;
					}
				}
			}
		}
		
		return False;
	}
	
	main() {
		declare Real StartDifficulty;
		declare Real StartQuality;
			
		declare SoundHover = Audio.CreateSound("file://Media/Sounds/Hover.ogg");
		declare SoundClick = Audio.CreateSound("file://Media/Sounds/Click.ogg");
		declare SoundElectric = Audio.CreateSound("file://Media/Sounds/Electric.ogg");
		declare SoundFinish = Audio.CreateSound("file://Media/Sounds/Finish.ogg");
		
		declare Difficulties = [
			"Very easy",
			"Easy",
			"Simple",
			"Intermediate",
			"Advanced",
			"Hard",
			"Very hard",
			"Challenging",
			"Extreme",
			"Nearly impossible"
		];
		
		declare Qualities = [
			"The worst",
			"Bad",
			"Weird",
			"Not bad",
			"Alright",
			"Good",
			"Enjoyable",
			"Great",
			"Very fun",
			"Incredible"
		];
		
		declare HoldDifficulty = False;
		declare HoldQuality = False;
		
		// False - Skillpoints, True - Activity points
		declare PointSwitch = False;
		
		declare CHttpRequest MapInfoRequest;
		declare CHttpRequest RateRequest;
		
		declare Real DifficultyValue = -1.0;
		declare Real QualityValue = -1.0;
		
		declare netread Text Net_Environment for UI;
		declare netread Text Net_Map for UI;
		declare netread Text Net_NEM_Car for UI;
		
		declare netwrite Boolean Net_NEM_Validate for UI;
		Net_NEM_Validate = False;
		declare netread Integer Net_NEM_Validate_Tries for UI;
		declare netread Integer Net_NEM_Skillpoints for UI;
		(Page.GetFirstChild("LabelPointsValue") as CMlLabel).SetText(""^Net_NEM_Skillpoints);
		
		declare netread Integer Net_Record for UI;
		declare Integer TimeAnimation;
		declare Integer StartTime = Now + 500;
		
		EnableMenuNavigation(True,False,Null,50);
		
		if(IsCampaignMap(Map.MapInfo.MapUid))
			MapInfoRequest = Http.CreateGet("http://trackmania.bigbang1112.eu/nadeoenvimix/api/map_info.php?uid=" ^ Map.MapInfo.MapUid ^ "&login=" ^ LocalUser.Login);
		
		declare netread Integer Net_NEM_ActivityPoints for UI;
		//(Page.GetFirstChild("LabelActivityPoints") as CMlLabel).SetText(""^Net_NEM_ActivityPoints);
		
		declare netread Text Net_Type for UI;
		switch(Net_Type) {
			case "FIRST_FINISH": (Page.GetFirstChild("Type") as CMlLabel).SetText("YOUR FIRST FINISH!");
			case "PERSONAL_BEST": (Page.GetFirstChild("Type") as CMlLabel).SetText("NEW PERSONAL BEST");
			case "EQUAL": (Page.GetFirstChild("Type") as CMlLabel).SetText("EQUAL! HOW UNLUCKY");
			case "WORSE": (Page.GetFirstChild("Type") as CMlLabel).SetText("MAYBE NEXT TIME");
		}
		
		if(IsCampaignMap(Map.MapInfo.MapUid)) {
			if(Net_Type == "FIRST_FINISH") {
				declare persistent Text PERSISTENT_NEM_ACCESS_TOKEN for LocalUser;
				declare netread Integer Net_NEM_FirstFinish_PlayerCount for UI;
				declare Points = MathLib::NearestInteger(500/MathLib::ToReal(Net_NEM_FirstFinish_PlayerCount+1));
				//Activity("http://trackmania.bigbang1112.eu/nadeoenvimix/api/activity.php?map="^Map.MapInfo.MapUid^"&car="^Net_NEM_Car^"&type=finish&points="^Points);
			}
			else if(Net_Type == "PERSONAL_BEST") {
				declare persistent Text PERSISTENT_NEM_ACCESS_TOKEN for LocalUser;
				//Activity("http://trackmania.bigbang1112.eu/nadeoenvimix/api/activity.php?map="^Map.MapInfo.MapUid^"&car="^Net_NEM_Car^"&type=finish&points=10");
			}
			else if(Net_Type == "EQUAL") {
				declare persistent Text PERSISTENT_NEM_ACCESS_TOKEN for LocalUser;
				//Activity("http://trackmania.bigbang1112.eu/nadeoenvimix/api/activity.php?map="^Map.MapInfo.MapUid^"&car="^Net_NEM_Car^"&type=finish&points=5");
			}
			else if(Net_Type == "WORSE") {
				declare persistent Text PERSISTENT_NEM_ACCESS_TOKEN for LocalUser;
				//Activity("http://trackmania.bigbang1112.eu/nadeoenvimix/api/activity.php?map="^Map.MapInfo.MapUid^"&car="^Net_NEM_Car^"&type=finish&points=1");
			}
			
			/*declare ActivityDayRequest = Http.CreateGet("http://trackmania.bigbang1112.eu/nadeoenvimix/api/track_day.php");
			wait(ActivityDayRequest.IsCompleted);
			if(ActivityDayRequest.StatusCode == 200) {
				declare Doc = Xml.Create(ActivityDayRequest.Result);
				
				declare Text M;
				if(TextLib::ToInteger(Doc.Root.GetFirstChild("Map").TextContents) < 10)
					M = Doc.Root.GetFirstChild("Difficulty").TextContents^0^Doc.Root.GetFirstChild("Map").TextContents;
				else
					M = Doc.Root.GetFirstChild("Difficulty").TextContents^Doc.Root.GetFirstChild("Map").TextContents;
				
				if(Doc.Root.GetFirstChild("Environment").TextContents == Net_Environment && "$fff$s"^M == Net_Map) {
					log("yes");
					declare AdditionalPoints = MathLib::NearestInteger(ActivityPoints * TextLib::ToReal(Doc.Root.GetFirstChild("Multiplier").TextContents)) - ActivityPoints;
					declare persistent Text PERSISTENT_NEM_ACCESS_TOKEN for LocalUser;
					Activity("http://trackmania.bigbang1112.eu/nadeoenvimix/api/activity.php?map="^Map.MapInfo.MapUid^"&car="^Net_NEM_Car^"&type=trackoftheday&points="^AdditionalPoints);
				}
				Xml.Destroy(Doc);
			}
			Http.Destroy(ActivityDayRequest);*/
		}
		
		declare netread Text[Text][] Net_NEM_Leaderboard for UI;
		
		declare TimerPoints = Now + 1000;
		Audio.PlaySoundEvent(SoundFinish, 1.0);
		
		while(True) {
			for(i,0,(Page.GetFirstChild("Leaderboard") as CMlFrame).Controls.count-1) (Page.GetFirstChild("Leaderboard") as CMlFrame).Controls[i].Hide();
			for(i,0,Net_NEM_Leaderboard.count-1) {
				(((Page.GetFirstChild("Leaderboard") as CMlFrame).Controls[i] as CMlFrame).GetFirstChild("Nickname") as CMlLabel).SetText(Net_NEM_Leaderboard[i]["Nickname"]);
				(((Page.GetFirstChild("Leaderboard") as CMlFrame).Controls[i] as CMlFrame).GetFirstChild("Time") as CMlLabel).SetText(TextLib::TimeToText(TextLib::ToInteger(Net_NEM_Leaderboard[i]["Time"]),True)^TextLib::SubText(Net_NEM_Leaderboard[i]["Time"],TextLib::Length(Net_NEM_Leaderboard[i]["Time"])-1,1));
				
				(Page.GetFirstChild("Leaderboard") as CMlFrame).Controls[i].Show();
			}
		
			TimeAnimation = MathLib::NearestInteger(AnimLib::EaseOutExp(Now - StartTime, 0.0, 1.0, 1000)*Net_Record);
		
			if(TimerPoints < Now - 2000) {
				if(PointSwitch) PointSwitch = False;
				else PointSwitch = True;
				
				if(PointSwitch) {
					(Page.GetFirstChild("LabelPointsValue") as CMlLabel).SetText(""^ActivityPoints);
					(Page.GetFirstChild("LabelPoints") as CMlLabel).SetText("ACTIVITY POINTS");
				}
				else {
					(Page.GetFirstChild("LabelPointsValue") as CMlLabel).SetText(""^Net_NEM_Skillpoints);
					(Page.GetFirstChild("LabelPoints") as CMlLabel).SetText("SKILLPOINTS");
				}
				
				TimerPoints = Now;
			}
		
			(Page.GetFirstChild("Record") as CMlLabel).SetText(TextLib::TimeToText(TimeAnimation,True)^TextLib::SubText(""^TimeAnimation,TextLib::Length(""^TimeAnimation)-1,1));
			
			if(IsCampaignMap(Map.MapInfo.MapUid)) {
				(Page.GetFirstChild("LabelEnvironment") as CMlLabel).SetText(Net_Environment);
				(Page.GetFirstChild("LabelMap") as CMlLabel).SetText(Net_Map);
			}
			else (Page.GetFirstChild("LabelMapName") as CMlLabel).SetText(Map.MapInfo.Name);
			
			(Page.GetFirstChild("LabelCar") as CMlLabel).SetText(Net_NEM_Car);
			
			if(DifficultyValue != -1.0) {
				DifficultyValue = (Page.GetFirstChild("QuadDifficultySlider").RelativePosition_V3.X + 35)/70.0;
				(Page.GetFirstChild("LabelDifficulty") as CMlLabel).SetText(Difficulties[MathLib::FloorInteger(DifficultyValue * 9.999)]);
			}
			if(QualityValue != -1.0) {
				QualityValue = (Page.GetFirstChild("QuadQualitySlider").RelativePosition_V3.X + 35)/70.0;
				(Page.GetFirstChild("LabelQuality") as CMlLabel).SetText(Qualities[MathLib::FloorInteger(QualityValue * 9.999)]);
			}
			
			if(MapInfoRequest != Null) {
				if(MapInfoRequest.IsCompleted) {
					if(MapInfoRequest.StatusCode == 200) {
						declare Doc = Xml.Create(MapInfoRequest.Result);
						
						declare NodeInfo = Doc.GetFirstChild("MAP_INFO");
						declare NodeCar <=> NodeInfo.GetFirstChild(Net_NEM_Car);
						
						StartDifficulty = TextLib::ToReal(NodeCar.GetFirstChild("Difficulty").TextContents);
						StartQuality = TextLib::ToReal(NodeCar.GetFirstChild("Quality").TextContents);
						DifficultyValue = StartDifficulty;
						QualityValue = StartQuality;
						
						if(StartDifficulty == -1.0) {
							Page.GetFirstChild("QuadDifficultyGlow").Show();
						}
						else {
							Page.GetFirstChild("QuadDifficultySlider").Show();
							Page.GetFirstChild("LabelDifficulty").Show();
						}
						if(StartQuality == -1.0) {
							Page.GetFirstChild("QuadQualityGlow").Show();
						}
						else {
							Page.GetFirstChild("QuadQualitySlider").Show();
							Page.GetFirstChild("LabelQuality").Show();
						}
						
						Page.GetFirstChild("QuadDifficultySlider").RelativePosition_V3.X = StartDifficulty * 70 - 35;
						Page.GetFirstChild("QuadQualitySlider").RelativePosition_V3.X = StartQuality * 70 - 35;
						
						Page.GetFirstChild("FrameRating").Show();
						
						// If you're a new validator
						if(Doc.GetFirstChild("MAP_INFO").GetFirstChild(Net_NEM_Car).GetAttributeText("Validator", "") == "") {
							//Validate();
						}
						
						// If you're validator of this track in general
						if(Doc.GetFirstChild("MAP_INFO").GetFirstChild(Net_NEM_Car).GetAttributeText("ValidatorLogin", "") == LocalUser.Login) {
							(Page.GetFirstChild("LabelValidator") as CMlLabel).SetText("You're a validator of this track.");
							Page.GetFirstChild("LabelValidator").Show();
						}
						
						Xml.Destroy(Doc);
					}
					else if(MapInfoRequest.StatusCode == 12007) {
						(Page.GetFirstChild("LabelValidator") as CMlLabel).SetText("Offline mode. Unknown if you are a validator.");
						Page.GetFirstChild("LabelValidator").Show();
					}
					else {
					
					}
					
					Http.Destroy(MapInfoRequest);
					MapInfoRequest = Null;
				}
			}
			if(RateRequest != Null) {
				if(RateRequest.IsCompleted) {
					if(RateRequest.StatusCode == 200) {
						
					}
					else if (RateRequest.StatusCode == 403) {/*
						OpenLink("https://prod.live.maniaplanet.com/login/oauth2/authorize?response_type=code&scope=basic&state=kkkkk&client_id=d7de0ddcdc&redirect_uri=http:%2F%2Ftrackmania.bigbang1112.eu/nadeoenvimix/api/token.php", CMlScript::LinkType::ManialinkBrowser);
					
						while(True) {
							Http.Destroy(RateRequest);
							declare persistent Text PERSISTENT_NEM_ACCESS_TOKEN for LocalUser;
							RateRequest = Http.CreateGet("http://trackmania.bigbang1112.eu/nadeoenvimix/api/rate.php?token="^PERSISTENT_NEM_ACCESS_TOKEN^"&map="^Map.MapInfo.MapUid^"&car="^Net_NEM_Car^"&difficulty="^DifficultyValue^"&quality="^QualityValue);
							wait(RateRequest.IsCompleted);
							if(RateRequest.StatusCode == 200) {
								break;
							}
							log("Endscreen stuck - Rate, Code " ^ RateRequest.StatusCode);
						}*/
					}
					else if(RateRequest.StatusCode == 12007) {
						
					}
					else {
						
					}
					
					declare netwrite Boolean Net_NEM_Continue for UI;
					Net_NEM_Continue = True;
					
					Http.Destroy(RateRequest);
					RateRequest = Null;
				}
			}
			
			
			(Page.GetFirstChild("QuadDifficultyGlow") as CMlQuad).Opacity = MathLib::Sin(Now/100.0) * .5 + .5;
			(Page.GetFirstChild("QuadQualityGlow") as CMlQuad).Opacity = MathLib::Sin((Now-1000)/100.0) * .5 + .5;
			
			if(MouseLeftButton) {
				if(HoldDifficulty) {
					Page.GetFirstChild("QuadDifficultySlider").RelativePosition_V3.X = MathLib::Clamp(MouseX - 27.5,-35.0,35.0);
				}
				if(HoldQuality) {
					Page.GetFirstChild("QuadQualitySlider").RelativePosition_V3.X = MathLib::Clamp(MouseX - 27.5,-35.0,35.0);
				}
			}
			else {
				HoldDifficulty = False;
				HoldQuality = False;
			}
			
			foreach(Event,PendingEvents) {
				switch(Event.Type) {
					case CMlEvent::Type::MenuNavigation: {
						switch(Event.MenuNavAction) {
							case CMlEvent::EMenuNavAction::Select: {
								if(StartDifficulty != DifficultyValue || StartQuality != QualityValue) {
									if(IsCampaignMap(Map.MapInfo.MapUid)) {
										declare persistent Text PERSISTENT_NEM_ACCESS_TOKEN for LocalUser;
										RateRequest = Http.CreateGet("http://trackmania.bigbang1112.eu/nadeoenvimix/api/rate.php?token="^PERSISTENT_NEM_ACCESS_TOKEN^"&map="^Map.MapInfo.MapUid^"&car="^Net_NEM_Car^"&difficulty="^DifficultyValue^"&quality="^QualityValue);
									}
									else {
										declare netwrite Boolean Net_NEM_Continue for UI;
										Net_NEM_Continue = True;
									}
								}
								else {
									declare netwrite Boolean Net_NEM_Continue for UI;
									Net_NEM_Continue = True;
								}
							}
						}
					}
					case CMlEvent::Type::KeyPress: {
						if(Event.KeyName == "Enter") {
							
						}
					}
					case CMlEvent::Type::MouseOver: {
						declare Frame <=> Event.Control.Parent;
					
						if(Event.ControlId == "button") {
							Audio.PlaySoundEvent(SoundHover, 1.0);
							Frame.DataAttributeSet("hover","true");
							Frame.DataAttributeSet("hover_time",Now^"");
							Frame.DataAttributeSet("hover_in_value",(Event.Control as CMlQuad).BgColor[0]^"");
						}
					}
					case CMlEvent::Type::MouseOut: {
						declare Frame <=> Event.Control.Parent;
					
						if(Event.ControlId == "button") {
							Frame.DataAttributeSet("hover","false");
							Frame.DataAttributeSet("hover_time",Now^"");
							Frame.DataAttributeSet("hover_out_value",(Event.Control as CMlQuad).BgColor[0]^"");
						}
					}
					case CMlScriptEvent::Type::MouseClick: {
						if(Event.ControlId == "LabelValidator") {
							if(ValidationIssues) {
								Validate();
							}
						}
						if(Event.ControlId == "QuadDifficultySlider") {
							HoldDifficulty = True;
						}
						if(Event.ControlId == "QuadQualitySlider") {
							HoldQuality = True;
						}
						if(Event.ControlId == "QuadDifficultyBack") {
							Page.GetFirstChild("QuadDifficultySlider").RelativePosition_V3.X = MathLib::Clamp(MouseX - 30.0,-35.0,35.0);
							HoldDifficulty = True;
							
							Page.GetFirstChild("QuadDifficultyGlow").Hide();
							Page.GetFirstChild("QuadDifficultySlider").Show();
							Page.GetFirstChild("LabelDifficulty").Show();
							
							DifficultyValue = (Page.GetFirstChild("QuadDifficultySlider").RelativePosition_V3.X + 35)/70.0;
						}
						if(Event.ControlId == "QuadQualityBack") {
							Page.GetFirstChild("QuadQualitySlider").RelativePosition_V3.X = MathLib::Clamp(MouseX - 30.0,-35.0,35.0);
							HoldQuality = True;
							
							Page.GetFirstChild("QuadQualityGlow").Hide();
							Page.GetFirstChild("QuadQualitySlider").Show();
							Page.GetFirstChild("LabelQuality").Show();
							
							QualityValue = (Page.GetFirstChild("QuadQualitySlider").RelativePosition_V3.X + 35)/70.0;
						}
						if(Event.Control.Parent.ControlId == "buttonContinue") {
							if(StartDifficulty != DifficultyValue || StartQuality != QualityValue) {
								if(IsCampaignMap(Map.MapInfo.MapUid)) {
									declare persistent Text PERSISTENT_NEM_ACCESS_TOKEN for LocalUser;
									RateRequest = Http.CreateGet("http://trackmania.bigbang1112.eu/nadeoenvimix/api/rate.php?token="^PERSISTENT_NEM_ACCESS_TOKEN^"&map="^Map.MapInfo.MapUid^"&car="^Net_NEM_Car^"&difficulty="^DifficultyValue^"&quality="^QualityValue);
								}
								else {
									declare netwrite Boolean Net_NEM_Continue for UI;
									Net_NEM_Continue = True;
								}
							}
							else {
								declare netwrite Boolean Net_NEM_Continue for UI;
								Net_NEM_Continue = True;
							}
						}
					}
				}
			}
			
			yield;
		}
	}
-->
</script>
</manialink>